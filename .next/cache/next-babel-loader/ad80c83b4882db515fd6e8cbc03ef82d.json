{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass DbServices {\n  static getProjects() {\n    return fetch(this.url + \"projects\", this.requestOptions).then(data => data.json());\n  }\n\n  static getProject(name) {\n    return fetch(this.url + \"projects/\" + name, this.requestOptions).then(data => data.json());\n  }\n\n}\n\n_defineProperty(DbServices, \"url\", \"http://127.0.0.1:7192/\" || \"\");\n\n_defineProperty(DbServices, \"requestOptions\", {\n  method: \"GET\",\n  headers: {\n    Authorization: \"JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.sOXzJ_0WxtmN1v20Agkvmg8hOH6v43kjONM8E19TnBA\" || \"\"\n  },\n  redirect: \"follow\"\n});\n\nexport default DbServices;","map":{"version":3,"sources":["C:/Users/lubas/source/js/frontend-next/Services/DbServices.tsx"],"names":["DbServices","getProjects","fetch","url","requestOptions","then","data","json","getProject","name","method","headers","Authorization","redirect"],"mappings":";;AAEA,MAAMA,UAAN,CAAiB;AAUhB,SAAOC,WAAP,GAAyC;AACxC,WAAOC,KAAK,CAAC,KAAKC,GAAL,GAAW,UAAZ,EAAwB,KAAKC,cAA7B,CAAL,CAAkDC,IAAlD,CACLC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADJ,CAAP;AAGA;;AACD,SAAOC,UAAP,CAAkBC,IAAlB,EAAkD;AACjD,WAAOP,KAAK,CAAC,KAAKC,GAAL,GAAW,WAAX,GAAyBM,IAA1B,EAAgC,KAAKL,cAArC,CAAL,CAA0DC,IAA1D,CACLC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADJ,CAAP;AAGA;;AAnBe;;gBAAXP,U,SACwB,4BAA2B,E;;gBADnDA,U,oBAGgC;AACpCU,EAAAA,MAAM,EAAE,KAD4B;AAEpCC,EAAAA,OAAO,EAAE;AACRC,IAAAA,aAAa,EAAE,qKAA2B;AADlC,GAF2B;AAKpCC,EAAAA,QAAQ,EAAE;AAL0B,C;;AAmBtC,eAAeb,UAAf","sourcesContent":["import { Project } from \"./DbModels/Project\";\r\n\r\nclass DbServices {\r\n\tprivate static url: string = process.env.BACKEND_URL || \"\";\r\n\r\n\tstatic requestOptions: RequestInit = {\r\n\t\tmethod: \"GET\",\r\n\t\theaders: {\r\n\t\t\tAuthorization: process.env.BACKEND_KEY || \"\",\r\n\t\t},\r\n\t\tredirect: \"follow\",\r\n\t};\r\n\tstatic getProjects(): Promise<Project[]> {\r\n\t\treturn fetch(this.url + \"projects\", this.requestOptions).then(\r\n\t\t\t(data) => data.json() as Promise<Project[]>\r\n\t\t);\r\n\t}\r\n\tstatic getProject(name: string): Promise<Project> {\r\n\t\treturn fetch(this.url + \"projects/\" + name, this.requestOptions).then(\r\n\t\t\t(data) => data.json() as Promise<Project>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DbServices;\r\n"]},"metadata":{},"sourceType":"module"}