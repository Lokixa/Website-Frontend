{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lubas\\\\source\\\\js\\\\frontend-next\\\\pages\\\\projects\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport { Status } from \"../../components/Status\";\nimport DbService from \"../../Services/DbServices\";\n\nclass ProjectsIndex extends React.Component {\n  componentDidMount() {\n    DbService.getProjects().then(data => {\n      const items = new Array();\n      data.forEach(project => {\n        items.push(__jsx(ProjectCard, {\n          name: project.name,\n          language: project.language,\n          url: project.url,\n          license: project.license,\n          description: project.description,\n          key: project.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 7\n          }\n        }));\n      });\n      this.setState({\n        items,\n        isLoading: false\n      });\n    }).catch(_ => {\n      this.setState({\n        items: [],\n        isLoading: false,\n        hasFailed: true\n      });\n    });\n  }\n\n  render() {\n    var _this$state;\n\n    if (this.state.hasFailed) {\n      return __jsx(Status, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, \"Can't connect to database\");\n    }\n\n    if (this.state.isLoading) {\n      return __jsx(Status, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, \"Loading...\");\n    }\n\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 10\n      }\n    }, (_this$state = this.state) === null || _this$state === void 0 ? void 0 : _this$state.items);\n  }\n\n}\n\nexport default ProjectsIndex;\nexport async function getStaticProps(context) {\n  return {\n    props: {}\n  };\n}","map":{"version":3,"sources":["C:/Users/lubas/source/js/frontend-next/pages/projects/index.tsx"],"names":["React","ProjectCard","Status","DbService","ProjectsIndex","Component","componentDidMount","getProjects","then","data","items","Array","forEach","project","push","name","language","url","license","description","setState","isLoading","catch","_","hasFailed","render","state","getStaticProps","context","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AAC3CC,EAAAA,iBAAiB,GAAG;AACnBH,IAAAA,SAAS,CAACI,WAAV,GACEC,IADF,CACQC,IAAD,IAAU;AACf,YAAMC,KAAK,GAAG,IAAIC,KAAJ,EAAd;AACAF,MAAAA,IAAI,CAACG,OAAL,CAAcC,OAAD,IAAa;AACzBH,QAAAA,KAAK,CAACI,IAAN,CACC,MAAC,WAAD;AACC,UAAA,IAAI,EAAED,OAAO,CAACE,IADf;AAEC,UAAA,QAAQ,EAAEF,OAAO,CAACG,QAFnB;AAGC,UAAA,GAAG,EAAEH,OAAO,CAACI,GAHd;AAIC,UAAA,OAAO,EAAEJ,OAAO,CAACK,OAJlB;AAKC,UAAA,WAAW,EAAEL,OAAO,CAACM,WALtB;AAMC,UAAA,GAAG,EAAEN,OAAO,CAACE,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUA,OAXD;AAYA,WAAKK,QAAL,CAAc;AAAEV,QAAAA,KAAF;AAASW,QAAAA,SAAS,EAAE;AAApB,OAAd;AACA,KAhBF,EAiBEC,KAjBF,CAiBSC,CAAD,IAAY;AAClB,WAAKH,QAAL,CAAc;AACbV,QAAAA,KAAK,EAAE,EADM;AAEbW,QAAAA,SAAS,EAAE,KAFE;AAGbG,QAAAA,SAAS,EAAE;AAHE,OAAd;AAKA,KAvBF;AAwBA;;AAEDC,EAAAA,MAAM,GAAG;AAAA;;AACR,QAAI,KAAKC,KAAL,CAAWF,SAAf,EAA0B;AACzB,aAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAP;AACA;;AACD,QAAI,KAAKE,KAAL,CAAWL,SAAf,EAA0B;AACzB,aAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACA;;AACD,WAAO,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiB,KAAKK,KAAtB,gDAAiB,YAAYhB,KAA7B,CAAP;AACA;;AApC0C;;AAsC5C,eAAeN,aAAf;AAEA,OAAO,eAAeuB,cAAf,CAA8BC,OAA9B,EAAuC;AAC7C,SAAO;AACNC,IAAAA,KAAK,EAAE;AADD,GAAP;AAGA","sourcesContent":["import React from \"react\";\r\nimport ProjectCard from \"../../components/ProjectCard\";\r\nimport { Status } from \"../../components/Status\";\r\nimport DbService from \"../../Services/DbServices\";\r\n\r\nclass ProjectsIndex extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\tDbService.getProjects()\r\n\t\t\t.then((data) => {\r\n\t\t\t\tconst items = new Array<JSX.Element>();\r\n\t\t\t\tdata.forEach((project) => {\r\n\t\t\t\t\titems.push(\r\n\t\t\t\t\t\t<ProjectCard\r\n\t\t\t\t\t\t\tname={project.name}\r\n\t\t\t\t\t\t\tlanguage={project.language}\r\n\t\t\t\t\t\t\turl={project.url}\r\n\t\t\t\t\t\t\tlicense={project.license}\r\n\t\t\t\t\t\t\tdescription={project.description}\r\n\t\t\t\t\t\t\tkey={project.name}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t\tthis.setState({ items, isLoading: false });\r\n\t\t\t})\r\n\t\t\t.catch((_: any) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\titems: [],\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\thasFailed: true,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasFailed) {\r\n\t\t\treturn <Status>Can't connect to database</Status>;\r\n\t\t}\r\n\t\tif (this.state.isLoading) {\r\n\t\t\treturn <Status>Loading...</Status>;\r\n\t\t}\r\n\t\treturn <React.Fragment>{this.state?.items}</React.Fragment>;\r\n\t}\r\n}\r\nexport default ProjectsIndex;\r\n\r\nexport async function getStaticProps(context) {\r\n\treturn {\r\n\t\tprops: {},\r\n\t};\r\n}\r\n"]},"metadata":{},"sourceType":"module"}