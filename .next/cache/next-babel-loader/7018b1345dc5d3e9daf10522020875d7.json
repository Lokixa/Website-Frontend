{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\lubas\\\\source\\\\js\\\\frontend-next\\\\pages\\\\projects\\\\index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport { Status } from \"../../components/Status\";\n\nvar ProjectsIndex = /*#__PURE__*/function (_React$Component) {\n  _inherits(ProjectsIndex, _React$Component);\n\n  var _super = _createSuper(ProjectsIndex);\n\n  function ProjectsIndex() {\n    _classCallCheck(this, ProjectsIndex);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ProjectsIndex, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.state.items) {\n        var items = new Array();\n\n        for (var i = 0; i < this.props.data.length; i++) {\n          var project = this.props.data[i];\n          items.push(__jsx(ProjectCard, {\n            name: project.name,\n            language: project.language,\n            url: project.url,\n            license: project.license,\n            description: project.description,\n            key: project.name,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 6\n            }\n          }));\n        }\n\n        this.setState({\n          items: items\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.hasFailed) {\n        return __jsx(Status, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }\n        }, \"Can't connect to database\");\n      }\n\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 10\n        }\n      }, this.state.items);\n    }\n  }]);\n\n  return ProjectsIndex;\n}(React.Component);\n\nexport var __N_SSG = true;\nexport default ProjectsIndex;","map":{"version":3,"sources":["C:/Users/lubas/source/js/frontend-next/pages/projects/index.tsx"],"names":["React","ProjectCard","Status","ProjectsIndex","state","items","Array","i","props","data","length","project","push","name","language","url","license","description","setState","hasFailed","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,MAAT,QAAuB,yBAAvB;;IAYMC,a;;;;;;;;;;;;;wCACe;AACnB,UAAI,CAAC,KAAKC,KAAL,CAAWC,KAAhB,EAAuB;AACtB,YAAMA,KAAK,GAAG,IAAIC,KAAJ,EAAd;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAApC,EAA4CH,CAAC,EAA7C,EAAiD;AAChD,cAAII,OAAO,GAAG,KAAKH,KAAL,CAAWC,IAAX,CAAgBF,CAAhB,CAAd;AACAF,UAAAA,KAAK,CAACO,IAAN,CACC,MAAC,WAAD;AACC,YAAA,IAAI,EAAED,OAAO,CAACE,IADf;AAEC,YAAA,QAAQ,EAAEF,OAAO,CAACG,QAFnB;AAGC,YAAA,GAAG,EAAEH,OAAO,CAACI,GAHd;AAIC,YAAA,OAAO,EAAEJ,OAAO,CAACK,OAJlB;AAKC,YAAA,WAAW,EAAEL,OAAO,CAACM,WALtB;AAMC,YAAA,GAAG,EAAEN,OAAO,CAACE,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAUA;;AACD,aAAKK,QAAL,CAAc;AAAEb,UAAAA,KAAK,EAALA;AAAF,SAAd;AACA;AACD;;;6BAEQ;AACR,UAAI,KAAKG,KAAL,CAAWW,SAAf,EAA0B;AACzB,eAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAP;AACA;;AACD,aAAO,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiB,KAAKf,KAAL,CAAWC,KAA5B,CAAP;AACA;;;;EA1B0BL,KAAK,CAACoB,S;;;AA4BlC,eAAejB,aAAf","sourcesContent":["import React from \"react\";\r\nimport ProjectCard from \"../../components/ProjectCard\";\r\nimport { Status } from \"../../components/Status\";\r\nimport { Project } from \"../../Services/DbModels/Project\";\r\nimport DbService from \"../../Services/DbServices\";\r\n\r\ninterface Props {\r\n\tdata: Project[];\r\n\thasFailed: boolean;\r\n}\r\ninterface State {\r\n\titems: JSX.Element[] | null;\r\n}\r\n\r\nclass ProjectsIndex extends React.Component<Props, State> {\r\n\tcomponentDidMount() {\r\n\t\tif (!this.state.items) {\r\n\t\t\tconst items = new Array<JSX.Element>();\r\n\t\t\tfor (let i = 0; i < this.props.data.length; i++) {\r\n\t\t\t\tlet project = this.props.data[i];\r\n\t\t\t\titems.push(\r\n\t\t\t\t\t<ProjectCard\r\n\t\t\t\t\t\tname={project.name}\r\n\t\t\t\t\t\tlanguage={project.language}\r\n\t\t\t\t\t\turl={project.url}\r\n\t\t\t\t\t\tlicense={project.license}\r\n\t\t\t\t\t\tdescription={project.description}\r\n\t\t\t\t\t\tkey={project.name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tthis.setState({ items });\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.props.hasFailed) {\r\n\t\t\treturn <Status>Can't connect to database</Status>;\r\n\t\t}\r\n\t\treturn <React.Fragment>{this.state.items}</React.Fragment>;\r\n\t}\r\n}\r\nexport default ProjectsIndex;\r\n\r\nexport async function getStaticProps(context) {\r\n\tlet data = await DbService.getProjects();\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tdata,\r\n\t\t\thasFailed: false,\r\n\t\t},\r\n\t};\r\n}\r\n"]},"metadata":{},"sourceType":"module"}