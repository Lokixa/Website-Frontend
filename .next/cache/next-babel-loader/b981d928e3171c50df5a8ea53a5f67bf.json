{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lubas\\\\source\\\\js\\\\frontend-next\\\\pages\\\\projects\\\\index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport { Status } from \"../../components/Status\";\nimport DbService from \"../../Services/DbServices\";\n\nclass ProjectsIndex extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      items: [],\n      isLoading: true,\n      hasFailed: false\n    });\n  }\n\n  componentDidMount() {\n    DbService.getProjects().then(data => {\n      const items = new Array();\n      data.forEach(project => {\n        items.push(__jsx(ProjectCard, {\n          name: project.name,\n          language: project.language,\n          url: project.url,\n          license: project.license,\n          description: project.description,\n          key: project.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 7\n          }\n        }));\n      });\n      this.setState({\n        items,\n        isLoading: false\n      });\n    }).catch(_ => {\n      this.setState({\n        items: [],\n        isLoading: false,\n        hasFailed: true\n      });\n    });\n  }\n\n  render() {\n    var _this$state;\n\n    if (this.state.hasFailed) {\n      return __jsx(Status, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, \"Can't connect to database\");\n    }\n\n    if (this.state.isLoading) {\n      return __jsx(Status, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, \"Loading...\");\n    }\n\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }\n    }, (_this$state = this.state) === null || _this$state === void 0 ? void 0 : _this$state.items);\n  }\n\n}\n\nexport default ProjectsIndex;","map":{"version":3,"sources":["C:/Users/lubas/source/js/frontend-next/pages/projects/index.tsx"],"names":["React","ProjectCard","Status","DbService","ProjectsIndex","Component","items","isLoading","hasFailed","componentDidMount","getProjects","then","data","Array","forEach","project","push","name","language","url","license","description","setState","catch","_","render","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAQA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAAgE;AAAA;AAAA;;AAAA,mCACxC;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,SAAS,EAAE,IAAxB;AAA8BC,MAAAA,SAAS,EAAE;AAAzC,KADwC;AAAA;;AAG/DC,EAAAA,iBAAiB,GAAG;AACnBN,IAAAA,SAAS,CAACO,WAAV,GACEC,IADF,CACQC,IAAD,IAAU;AACf,YAAMN,KAAK,GAAG,IAAIO,KAAJ,EAAd;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAcC,OAAD,IAAa;AACzBT,QAAAA,KAAK,CAACU,IAAN,CACC,MAAC,WAAD;AACC,UAAA,IAAI,EAAED,OAAO,CAACE,IADf;AAEC,UAAA,QAAQ,EAAEF,OAAO,CAACG,QAFnB;AAGC,UAAA,GAAG,EAAEH,OAAO,CAACI,GAHd;AAIC,UAAA,OAAO,EAAEJ,OAAO,CAACK,OAJlB;AAKC,UAAA,WAAW,EAAEL,OAAO,CAACM,WALtB;AAMC,UAAA,GAAG,EAAEN,OAAO,CAACE,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUA,OAXD;AAYA,WAAKK,QAAL,CAAc;AAAEhB,QAAAA,KAAF;AAASC,QAAAA,SAAS,EAAE;AAApB,OAAd;AACA,KAhBF,EAiBEgB,KAjBF,CAiBSC,CAAD,IAAY;AAClB,WAAKF,QAAL,CAAc;AACbhB,QAAAA,KAAK,EAAE,EADM;AAEbC,QAAAA,SAAS,EAAE,KAFE;AAGbC,QAAAA,SAAS,EAAE;AAHE,OAAd;AAKA,KAvBF;AAwBA;;AAEDiB,EAAAA,MAAM,GAAG;AAAA;;AACR,QAAI,KAAKC,KAAL,CAAWlB,SAAf,EAA0B;AACzB,aAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAP;AACA;;AACD,QAAI,KAAKkB,KAAL,CAAWnB,SAAf,EAA0B;AACzB,aAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACA;;AACD,WAAO,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiB,KAAKmB,KAAtB,gDAAiB,YAAYpB,KAA7B,CAAP;AACA;;AAtC8D;;AAwChE,eAAeF,aAAf","sourcesContent":["import React from \"react\";\r\nimport ProjectCard from \"../../components/ProjectCard\";\r\nimport { Status } from \"../../components/Status\";\r\nimport DbService from \"../../Services/DbServices\";\r\n\r\ninterface ProjectsState {\r\n\titems: JSX.Element[] | null;\r\n\tisLoading: boolean;\r\n\thasFailed: boolean;\r\n}\r\n\r\nclass ProjectsIndex extends React.Component<any, ProjectsState> {\r\n\tstate: ProjectsState = { items: [], isLoading: true, hasFailed: false };\r\n\r\n\tcomponentDidMount() {\r\n\t\tDbService.getProjects()\r\n\t\t\t.then((data) => {\r\n\t\t\t\tconst items = new Array<JSX.Element>();\r\n\t\t\t\tdata.forEach((project) => {\r\n\t\t\t\t\titems.push(\r\n\t\t\t\t\t\t<ProjectCard\r\n\t\t\t\t\t\t\tname={project.name}\r\n\t\t\t\t\t\t\tlanguage={project.language}\r\n\t\t\t\t\t\t\turl={project.url}\r\n\t\t\t\t\t\t\tlicense={project.license}\r\n\t\t\t\t\t\t\tdescription={project.description}\r\n\t\t\t\t\t\t\tkey={project.name}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t\tthis.setState({ items, isLoading: false });\r\n\t\t\t})\r\n\t\t\t.catch((_: any) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\titems: [],\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\thasFailed: true,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasFailed) {\r\n\t\t\treturn <Status>Can't connect to database</Status>;\r\n\t\t}\r\n\t\tif (this.state.isLoading) {\r\n\t\t\treturn <Status>Loading...</Status>;\r\n\t\t}\r\n\t\treturn <React.Fragment>{this.state?.items}</React.Fragment>;\r\n\t}\r\n}\r\nexport default ProjectsIndex;\r\n"]},"metadata":{},"sourceType":"module"}