{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lubas\\\\source\\\\js\\\\frontend-next\\\\pages\\\\projects\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport { Status } from \"../../components/Status\";\nimport DbService from \"../../Services/DbServices\";\n\nclass ProjectsIndex extends React.Component {\n  componentDidMount() {\n    if (!this.state.items) {\n      const items = new Array();\n\n      for (let i = 0; i < this.props.data.length; i++) {\n        let project = this.props.data[i];\n        items.push(__jsx(ProjectCard, {\n          name: project.name,\n          language: project.language,\n          url: project.url,\n          license: project.license,\n          description: project.description,\n          key: project.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 6\n          }\n        }));\n      }\n    }\n  }\n\n  render() {\n    if (this.props.hasFailed) {\n      return __jsx(Status, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, \"Can't connect to database\");\n    }\n\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 10\n      }\n    }, this.state.items);\n  }\n\n}\n\nexport default ProjectsIndex;\nexport async function getStaticProps(context) {\n  let data = await DbService.getProjects();\n  return {\n    props: {\n      data,\n      hasFailed: false\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/lubas/source/js/frontend-next/pages/projects/index.tsx"],"names":["React","ProjectCard","Status","DbService","ProjectsIndex","Component","componentDidMount","state","items","Array","i","props","data","length","project","push","name","language","url","license","description","render","hasFailed","getStaticProps","context","getProjects"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;;AAUA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA0D;AACzDC,EAAAA,iBAAiB,GAAG;AACnB,QAAI,CAAC,KAAKC,KAAL,CAAWC,KAAhB,EAAuB;AACtB,YAAMA,KAAK,GAAG,IAAIC,KAAJ,EAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAApC,EAA4CH,CAAC,EAA7C,EAAiD;AAChD,YAAII,OAAO,GAAG,KAAKH,KAAL,CAAWC,IAAX,CAAgBF,CAAhB,CAAd;AACAF,QAAAA,KAAK,CAACO,IAAN,CACC,MAAC,WAAD;AACC,UAAA,IAAI,EAAED,OAAO,CAACE,IADf;AAEC,UAAA,QAAQ,EAAEF,OAAO,CAACG,QAFnB;AAGC,UAAA,GAAG,EAAEH,OAAO,CAACI,GAHd;AAIC,UAAA,OAAO,EAAEJ,OAAO,CAACK,OAJlB;AAKC,UAAA,WAAW,EAAEL,OAAO,CAACM,WALtB;AAMC,UAAA,GAAG,EAAEN,OAAO,CAACE,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUA;AACD;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACR,QAAI,KAAKV,KAAL,CAAWW,SAAf,EAA0B;AACzB,aAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAP;AACA;;AACD,WAAO,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB,KAAKf,KAAL,CAAWC,KAA5B,CAAP;AACA;;AAzBwD;;AA2B1D,eAAeJ,aAAf;AAEA,OAAO,eAAemB,cAAf,CAA8BC,OAA9B,EAAuC;AAC7C,MAAIZ,IAAI,GAAG,MAAMT,SAAS,CAACsB,WAAV,EAAjB;AACA,SAAO;AACNd,IAAAA,KAAK,EAAE;AACNC,MAAAA,IADM;AAENU,MAAAA,SAAS,EAAE;AAFL;AADD,GAAP;AAMA","sourcesContent":["import React from \"react\";\r\nimport ProjectCard from \"../../components/ProjectCard\";\r\nimport { Status } from \"../../components/Status\";\r\nimport { Project } from \"../../Services/DbModels/Project\";\r\nimport DbService from \"../../Services/DbServices\";\r\n\r\ninterface Props {\r\n\tdata: Project[];\r\n\thasFailed: boolean;\r\n}\r\ninterface State {\r\n\titems: JSX.Element[] | null;\r\n}\r\n\r\nclass ProjectsIndex extends React.Component<Props, State> {\r\n\tcomponentDidMount() {\r\n\t\tif (!this.state.items) {\r\n\t\t\tconst items = new Array<JSX.Element>();\r\n\t\t\tfor (let i = 0; i < this.props.data.length; i++) {\r\n\t\t\t\tlet project = this.props.data[i];\r\n\t\t\t\titems.push(\r\n\t\t\t\t\t<ProjectCard\r\n\t\t\t\t\t\tname={project.name}\r\n\t\t\t\t\t\tlanguage={project.language}\r\n\t\t\t\t\t\turl={project.url}\r\n\t\t\t\t\t\tlicense={project.license}\r\n\t\t\t\t\t\tdescription={project.description}\r\n\t\t\t\t\t\tkey={project.name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.props.hasFailed) {\r\n\t\t\treturn <Status>Can't connect to database</Status>;\r\n\t\t}\r\n\t\treturn <React.Fragment>{this.state.items}</React.Fragment>;\r\n\t}\r\n}\r\nexport default ProjectsIndex;\r\n\r\nexport async function getStaticProps(context) {\r\n\tlet data = await DbService.getProjects();\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tdata,\r\n\t\t\thasFailed: false,\r\n\t\t},\r\n\t};\r\n}\r\n"]},"metadata":{},"sourceType":"module"}