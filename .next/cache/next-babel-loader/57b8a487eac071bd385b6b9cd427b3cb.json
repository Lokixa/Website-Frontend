{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lubas\\\\source\\\\js\\\\frontend-next\\\\pages\\\\projects\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport { Status } from \"../../components/Status\";\nimport DbService from \"../../Services/DbServices\";\n\nclass ProjectsIndex extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    if (this.props.hasFailed) {\n      return __jsx(Status, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }\n      }, \"Can't connect to database\");\n    }\n\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 10\n      }\n    }, this.props.items);\n  }\n\n}\n\nexport default ProjectsIndex;\nexport async function getStaticProps(context) {\n  DbService.getProjects().then(data => {\n    const items = new Array();\n    data.forEach(project => {\n      items.push(__jsx(ProjectCard, {\n        name: project.name,\n        language: project.language,\n        url: project.url,\n        license: project.license,\n        description: project.description,\n        key: project.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 6\n        }\n      }));\n    });\n    this.setState({\n      items,\n      isLoading: false\n    });\n  }).catch(_ => {\n    this.setState({\n      items: [],\n      isLoading: false,\n      hasFailed: true\n    });\n  });\n  return {\n    props: {}\n  };\n}","map":{"version":3,"sources":["C:/Users/lubas/source/js/frontend-next/pages/projects/index.tsx"],"names":["React","ProjectCard","Status","DbService","ProjectsIndex","Component","componentDidMount","render","props","hasFailed","items","getStaticProps","context","getProjects","then","data","Array","forEach","project","push","name","language","url","license","description","setState","isLoading","catch","_"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAOA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AAC3CC,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBC,EAAAA,MAAM,GAAG;AACR,QAAI,KAAKC,KAAL,CAAWC,SAAf,EAA0B;AACzB,aAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAP;AACA;;AACD,WAAO,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB,KAAKD,KAAL,CAAWE,KAA5B,CAAP;AACA;;AAR0C;;AAU5C,eAAeN,aAAf;AAEA,OAAO,eAAeO,cAAf,CAA8BC,OAA9B,EAAuC;AAC7CT,EAAAA,SAAS,CAACU,WAAV,GACEC,IADF,CACQC,IAAD,IAAU;AACf,UAAML,KAAK,GAAG,IAAIM,KAAJ,EAAd;AACAD,IAAAA,IAAI,CAACE,OAAL,CAAcC,OAAD,IAAa;AACzBR,MAAAA,KAAK,CAACS,IAAN,CACC,MAAC,WAAD;AACC,QAAA,IAAI,EAAED,OAAO,CAACE,IADf;AAEC,QAAA,QAAQ,EAAEF,OAAO,CAACG,QAFnB;AAGC,QAAA,GAAG,EAAEH,OAAO,CAACI,GAHd;AAIC,QAAA,OAAO,EAAEJ,OAAO,CAACK,OAJlB;AAKC,QAAA,WAAW,EAAEL,OAAO,CAACM,WALtB;AAMC,QAAA,GAAG,EAAEN,OAAO,CAACE,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAUA,KAXD;AAYA,SAAKK,QAAL,CAAc;AAAEf,MAAAA,KAAF;AAASgB,MAAAA,SAAS,EAAE;AAApB,KAAd;AACA,GAhBF,EAiBEC,KAjBF,CAiBSC,CAAD,IAAY;AAClB,SAAKH,QAAL,CAAc;AACbf,MAAAA,KAAK,EAAE,EADM;AAEbgB,MAAAA,SAAS,EAAE,KAFE;AAGbjB,MAAAA,SAAS,EAAE;AAHE,KAAd;AAKA,GAvBF;AAyBA,SAAO;AACND,IAAAA,KAAK,EAAE;AADD,GAAP;AAGA","sourcesContent":["import React from \"react\";\r\nimport ProjectCard from \"../../components/ProjectCard\";\r\nimport { Status } from \"../../components/Status\";\r\nimport DbService from \"../../Services/DbServices\";\r\n\r\ninterface ProjectsState {\r\n\titems: JSX.Element[] | null;\r\n\thasFailed: boolean;\r\n}\r\n\r\nclass ProjectsIndex extends React.Component {\r\n\tcomponentDidMount() {}\r\n\r\n\trender() {\r\n\t\tif (this.props.hasFailed) {\r\n\t\t\treturn <Status>Can't connect to database</Status>;\r\n\t\t}\r\n\t\treturn <React.Fragment>{this.props.items}</React.Fragment>;\r\n\t}\r\n}\r\nexport default ProjectsIndex;\r\n\r\nexport async function getStaticProps(context) {\r\n\tDbService.getProjects()\r\n\t\t.then((data) => {\r\n\t\t\tconst items = new Array<JSX.Element>();\r\n\t\t\tdata.forEach((project) => {\r\n\t\t\t\titems.push(\r\n\t\t\t\t\t<ProjectCard\r\n\t\t\t\t\t\tname={project.name}\r\n\t\t\t\t\t\tlanguage={project.language}\r\n\t\t\t\t\t\turl={project.url}\r\n\t\t\t\t\t\tlicense={project.license}\r\n\t\t\t\t\t\tdescription={project.description}\r\n\t\t\t\t\t\tkey={project.name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t\tthis.setState({ items, isLoading: false });\r\n\t\t})\r\n\t\t.catch((_: any) => {\r\n\t\t\tthis.setState({\r\n\t\t\t\titems: [],\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\thasFailed: true,\r\n\t\t\t});\r\n\t\t});\r\n\r\n\treturn {\r\n\t\tprops: {},\r\n\t};\r\n}\r\n"]},"metadata":{},"sourceType":"module"}